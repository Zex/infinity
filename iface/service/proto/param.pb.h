// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: param.proto

#ifndef PROTOBUF_param_2eproto__INCLUDED
#define PROTOBUF_param_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace iface {
namespace param {
class ExtractFeatureParams;
class ExtractFeatureParamsDefaultTypeInternal;
extern ExtractFeatureParamsDefaultTypeInternal _ExtractFeatureParams_default_instance_;
class ExtractFeatureResponse;
class ExtractFeatureResponseDefaultTypeInternal;
extern ExtractFeatureResponseDefaultTypeInternal _ExtractFeatureResponse_default_instance_;
class FacialDetectParams;
class FacialDetectParamsDefaultTypeInternal;
extern FacialDetectParamsDefaultTypeInternal _FacialDetectParams_default_instance_;
class FacialDetectResponse;
class FacialDetectResponseDefaultTypeInternal;
extern FacialDetectResponseDefaultTypeInternal _FacialDetectResponse_default_instance_;
class Landmark;
class LandmarkDefaultTypeInternal;
extern LandmarkDefaultTypeInternal _Landmark_default_instance_;
class Point;
class PointDefaultTypeInternal;
extern PointDefaultTypeInternal _Point_default_instance_;
class Region;
class RegionDefaultTypeInternal;
extern RegionDefaultTypeInternal _Region_default_instance_;
class SimilarityParams;
class SimilarityParamsDefaultTypeInternal;
extern SimilarityParamsDefaultTypeInternal _SimilarityParams_default_instance_;
class SimilarityResponse;
class SimilarityResponseDefaultTypeInternal;
extern SimilarityResponseDefaultTypeInternal _SimilarityResponse_default_instance_;
}  // namespace param
}  // namespace iface

namespace iface {
namespace param {

namespace protobuf_param_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_param_2eproto

// ===================================================================

class ExtractFeatureParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:iface.param.ExtractFeatureParams) */ {
 public:
  ExtractFeatureParams();
  virtual ~ExtractFeatureParams();

  ExtractFeatureParams(const ExtractFeatureParams& from);

  inline ExtractFeatureParams& operator=(const ExtractFeatureParams& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtractFeatureParams& default_instance();

  static inline const ExtractFeatureParams* internal_default_instance() {
    return reinterpret_cast<const ExtractFeatureParams*>(
               &_ExtractFeatureParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ExtractFeatureParams* other);

  // implements Message ----------------------------------------------

  inline ExtractFeatureParams* New() const PROTOBUF_FINAL { return New(NULL); }

  ExtractFeatureParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExtractFeatureParams& from);
  void MergeFrom(const ExtractFeatureParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExtractFeatureParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string url = 1;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:iface.param.ExtractFeatureParams)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  mutable int _cached_size_;
  friend struct protobuf_param_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExtractFeatureResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:iface.param.ExtractFeatureResponse) */ {
 public:
  ExtractFeatureResponse();
  virtual ~ExtractFeatureResponse();

  ExtractFeatureResponse(const ExtractFeatureResponse& from);

  inline ExtractFeatureResponse& operator=(const ExtractFeatureResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtractFeatureResponse& default_instance();

  static inline const ExtractFeatureResponse* internal_default_instance() {
    return reinterpret_cast<const ExtractFeatureResponse*>(
               &_ExtractFeatureResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ExtractFeatureResponse* other);

  // implements Message ----------------------------------------------

  inline ExtractFeatureResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ExtractFeatureResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExtractFeatureResponse& from);
  void MergeFrom(const ExtractFeatureResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExtractFeatureResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string feat = 1;
  void clear_feat();
  static const int kFeatFieldNumber = 1;
  const ::std::string& feat() const;
  void set_feat(const ::std::string& value);
  #if LANG_CXX11
  void set_feat(::std::string&& value);
  #endif
  void set_feat(const char* value);
  void set_feat(const char* value, size_t size);
  ::std::string* mutable_feat();
  ::std::string* release_feat();
  void set_allocated_feat(::std::string* feat);

  // @@protoc_insertion_point(class_scope:iface.param.ExtractFeatureResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr feat_;
  mutable int _cached_size_;
  friend struct protobuf_param_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FacialDetectParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:iface.param.FacialDetectParams) */ {
 public:
  FacialDetectParams();
  virtual ~FacialDetectParams();

  FacialDetectParams(const FacialDetectParams& from);

  inline FacialDetectParams& operator=(const FacialDetectParams& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacialDetectParams& default_instance();

  static inline const FacialDetectParams* internal_default_instance() {
    return reinterpret_cast<const FacialDetectParams*>(
               &_FacialDetectParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(FacialDetectParams* other);

  // implements Message ----------------------------------------------

  inline FacialDetectParams* New() const PROTOBUF_FINAL { return New(NULL); }

  FacialDetectParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FacialDetectParams& from);
  void MergeFrom(const FacialDetectParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FacialDetectParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string url = 1;
  void clear_url();
  static const int kUrlFieldNumber = 1;
  const ::std::string& url() const;
  void set_url(const ::std::string& value);
  #if LANG_CXX11
  void set_url(::std::string&& value);
  #endif
  void set_url(const char* value);
  void set_url(const char* value, size_t size);
  ::std::string* mutable_url();
  ::std::string* release_url();
  void set_allocated_url(::std::string* url);

  // @@protoc_insertion_point(class_scope:iface.param.FacialDetectParams)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr url_;
  mutable int _cached_size_;
  friend struct protobuf_param_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Point : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:iface.param.Point) */ {
 public:
  Point();
  virtual ~Point();

  Point(const Point& from);

  inline Point& operator=(const Point& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Point& default_instance();

  static inline const Point* internal_default_instance() {
    return reinterpret_cast<const Point*>(
               &_Point_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Point* other);

  // implements Message ----------------------------------------------

  inline Point* New() const PROTOBUF_FINAL { return New(NULL); }

  Point* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Point& from);
  void MergeFrom(const Point& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Point* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:iface.param.Point)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  mutable int _cached_size_;
  friend struct protobuf_param_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Region : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:iface.param.Region) */ {
 public:
  Region();
  virtual ~Region();

  Region(const Region& from);

  inline Region& operator=(const Region& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Region& default_instance();

  static inline const Region* internal_default_instance() {
    return reinterpret_cast<const Region*>(
               &_Region_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Region* other);

  // implements Message ----------------------------------------------

  inline Region* New() const PROTOBUF_FINAL { return New(NULL); }

  Region* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Region& from);
  void MergeFrom(const Region& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Region* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // int32 width = 3;
  void clear_width();
  static const int kWidthFieldNumber = 3;
  ::google::protobuf::int32 width() const;
  void set_width(::google::protobuf::int32 value);

  // int32 height = 4;
  void clear_height();
  static const int kHeightFieldNumber = 4;
  ::google::protobuf::int32 height() const;
  void set_height(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:iface.param.Region)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  mutable int _cached_size_;
  friend struct protobuf_param_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Landmark : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:iface.param.Landmark) */ {
 public:
  Landmark();
  virtual ~Landmark();

  Landmark(const Landmark& from);

  inline Landmark& operator=(const Landmark& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Landmark& default_instance();

  static inline const Landmark* internal_default_instance() {
    return reinterpret_cast<const Landmark*>(
               &_Landmark_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Landmark* other);

  // implements Message ----------------------------------------------

  inline Landmark* New() const PROTOBUF_FINAL { return New(NULL); }

  Landmark* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Landmark& from);
  void MergeFrom(const Landmark& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Landmark* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .iface.param.Point pts = 1;
  int pts_size() const;
  void clear_pts();
  static const int kPtsFieldNumber = 1;
  const ::iface::param::Point& pts(int index) const;
  ::iface::param::Point* mutable_pts(int index);
  ::iface::param::Point* add_pts();
  ::google::protobuf::RepeatedPtrField< ::iface::param::Point >*
      mutable_pts();
  const ::google::protobuf::RepeatedPtrField< ::iface::param::Point >&
      pts() const;

  // @@protoc_insertion_point(class_scope:iface.param.Landmark)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::iface::param::Point > pts_;
  mutable int _cached_size_;
  friend struct protobuf_param_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FacialDetectResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:iface.param.FacialDetectResponse) */ {
 public:
  FacialDetectResponse();
  virtual ~FacialDetectResponse();

  FacialDetectResponse(const FacialDetectResponse& from);

  inline FacialDetectResponse& operator=(const FacialDetectResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FacialDetectResponse& default_instance();

  static inline const FacialDetectResponse* internal_default_instance() {
    return reinterpret_cast<const FacialDetectResponse*>(
               &_FacialDetectResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(FacialDetectResponse* other);

  // implements Message ----------------------------------------------

  inline FacialDetectResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  FacialDetectResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FacialDetectResponse& from);
  void MergeFrom(const FacialDetectResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FacialDetectResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .iface.param.Region regions = 1;
  int regions_size() const;
  void clear_regions();
  static const int kRegionsFieldNumber = 1;
  const ::iface::param::Region& regions(int index) const;
  ::iface::param::Region* mutable_regions(int index);
  ::iface::param::Region* add_regions();
  ::google::protobuf::RepeatedPtrField< ::iface::param::Region >*
      mutable_regions();
  const ::google::protobuf::RepeatedPtrField< ::iface::param::Region >&
      regions() const;

  // repeated .iface.param.Landmark landmarks = 2;
  int landmarks_size() const;
  void clear_landmarks();
  static const int kLandmarksFieldNumber = 2;
  const ::iface::param::Landmark& landmarks(int index) const;
  ::iface::param::Landmark* mutable_landmarks(int index);
  ::iface::param::Landmark* add_landmarks();
  ::google::protobuf::RepeatedPtrField< ::iface::param::Landmark >*
      mutable_landmarks();
  const ::google::protobuf::RepeatedPtrField< ::iface::param::Landmark >&
      landmarks() const;

  // @@protoc_insertion_point(class_scope:iface.param.FacialDetectResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::iface::param::Region > regions_;
  ::google::protobuf::RepeatedPtrField< ::iface::param::Landmark > landmarks_;
  mutable int _cached_size_;
  friend struct protobuf_param_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SimilarityParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:iface.param.SimilarityParams) */ {
 public:
  SimilarityParams();
  virtual ~SimilarityParams();

  SimilarityParams(const SimilarityParams& from);

  inline SimilarityParams& operator=(const SimilarityParams& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimilarityParams& default_instance();

  static inline const SimilarityParams* internal_default_instance() {
    return reinterpret_cast<const SimilarityParams*>(
               &_SimilarityParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(SimilarityParams* other);

  // implements Message ----------------------------------------------

  inline SimilarityParams* New() const PROTOBUF_FINAL { return New(NULL); }

  SimilarityParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SimilarityParams& from);
  void MergeFrom(const SimilarityParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SimilarityParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string feat1 = 1;
  void clear_feat1();
  static const int kFeat1FieldNumber = 1;
  const ::std::string& feat1() const;
  void set_feat1(const ::std::string& value);
  #if LANG_CXX11
  void set_feat1(::std::string&& value);
  #endif
  void set_feat1(const char* value);
  void set_feat1(const char* value, size_t size);
  ::std::string* mutable_feat1();
  ::std::string* release_feat1();
  void set_allocated_feat1(::std::string* feat1);

  // string feat2 = 2;
  void clear_feat2();
  static const int kFeat2FieldNumber = 2;
  const ::std::string& feat2() const;
  void set_feat2(const ::std::string& value);
  #if LANG_CXX11
  void set_feat2(::std::string&& value);
  #endif
  void set_feat2(const char* value);
  void set_feat2(const char* value, size_t size);
  ::std::string* mutable_feat2();
  ::std::string* release_feat2();
  void set_allocated_feat2(::std::string* feat2);

  // @@protoc_insertion_point(class_scope:iface.param.SimilarityParams)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr feat1_;
  ::google::protobuf::internal::ArenaStringPtr feat2_;
  mutable int _cached_size_;
  friend struct protobuf_param_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SimilarityResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:iface.param.SimilarityResponse) */ {
 public:
  SimilarityResponse();
  virtual ~SimilarityResponse();

  SimilarityResponse(const SimilarityResponse& from);

  inline SimilarityResponse& operator=(const SimilarityResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SimilarityResponse& default_instance();

  static inline const SimilarityResponse* internal_default_instance() {
    return reinterpret_cast<const SimilarityResponse*>(
               &_SimilarityResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(SimilarityResponse* other);

  // implements Message ----------------------------------------------

  inline SimilarityResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SimilarityResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SimilarityResponse& from);
  void MergeFrom(const SimilarityResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SimilarityResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // float score = 1;
  void clear_score();
  static const int kScoreFieldNumber = 1;
  float score() const;
  void set_score(float value);

  // @@protoc_insertion_point(class_scope:iface.param.SimilarityResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  float score_;
  mutable int _cached_size_;
  friend struct protobuf_param_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ExtractFeatureParams

// string url = 1;
inline void ExtractFeatureParams::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExtractFeatureParams::url() const {
  // @@protoc_insertion_point(field_get:iface.param.ExtractFeatureParams.url)
  return url_.GetNoArena();
}
inline void ExtractFeatureParams::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:iface.param.ExtractFeatureParams.url)
}
#if LANG_CXX11
inline void ExtractFeatureParams::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:iface.param.ExtractFeatureParams.url)
}
#endif
inline void ExtractFeatureParams::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:iface.param.ExtractFeatureParams.url)
}
inline void ExtractFeatureParams::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:iface.param.ExtractFeatureParams.url)
}
inline ::std::string* ExtractFeatureParams::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:iface.param.ExtractFeatureParams.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExtractFeatureParams::release_url() {
  // @@protoc_insertion_point(field_release:iface.param.ExtractFeatureParams.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExtractFeatureParams::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:iface.param.ExtractFeatureParams.url)
}

// -------------------------------------------------------------------

// ExtractFeatureResponse

// string feat = 1;
inline void ExtractFeatureResponse::clear_feat() {
  feat_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExtractFeatureResponse::feat() const {
  // @@protoc_insertion_point(field_get:iface.param.ExtractFeatureResponse.feat)
  return feat_.GetNoArena();
}
inline void ExtractFeatureResponse::set_feat(const ::std::string& value) {
  
  feat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:iface.param.ExtractFeatureResponse.feat)
}
#if LANG_CXX11
inline void ExtractFeatureResponse::set_feat(::std::string&& value) {
  
  feat_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:iface.param.ExtractFeatureResponse.feat)
}
#endif
inline void ExtractFeatureResponse::set_feat(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  feat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:iface.param.ExtractFeatureResponse.feat)
}
inline void ExtractFeatureResponse::set_feat(const char* value, size_t size) {
  
  feat_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:iface.param.ExtractFeatureResponse.feat)
}
inline ::std::string* ExtractFeatureResponse::mutable_feat() {
  
  // @@protoc_insertion_point(field_mutable:iface.param.ExtractFeatureResponse.feat)
  return feat_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExtractFeatureResponse::release_feat() {
  // @@protoc_insertion_point(field_release:iface.param.ExtractFeatureResponse.feat)
  
  return feat_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExtractFeatureResponse::set_allocated_feat(::std::string* feat) {
  if (feat != NULL) {
    
  } else {
    
  }
  feat_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feat);
  // @@protoc_insertion_point(field_set_allocated:iface.param.ExtractFeatureResponse.feat)
}

// -------------------------------------------------------------------

// FacialDetectParams

// string url = 1;
inline void FacialDetectParams::clear_url() {
  url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FacialDetectParams::url() const {
  // @@protoc_insertion_point(field_get:iface.param.FacialDetectParams.url)
  return url_.GetNoArena();
}
inline void FacialDetectParams::set_url(const ::std::string& value) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:iface.param.FacialDetectParams.url)
}
#if LANG_CXX11
inline void FacialDetectParams::set_url(::std::string&& value) {
  
  url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:iface.param.FacialDetectParams.url)
}
#endif
inline void FacialDetectParams::set_url(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:iface.param.FacialDetectParams.url)
}
inline void FacialDetectParams::set_url(const char* value, size_t size) {
  
  url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:iface.param.FacialDetectParams.url)
}
inline ::std::string* FacialDetectParams::mutable_url() {
  
  // @@protoc_insertion_point(field_mutable:iface.param.FacialDetectParams.url)
  return url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FacialDetectParams::release_url() {
  // @@protoc_insertion_point(field_release:iface.param.FacialDetectParams.url)
  
  return url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FacialDetectParams::set_allocated_url(::std::string* url) {
  if (url != NULL) {
    
  } else {
    
  }
  url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), url);
  // @@protoc_insertion_point(field_set_allocated:iface.param.FacialDetectParams.url)
}

// -------------------------------------------------------------------

// Point

// int32 x = 1;
inline void Point::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 Point::x() const {
  // @@protoc_insertion_point(field_get:iface.param.Point.x)
  return x_;
}
inline void Point::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:iface.param.Point.x)
}

// int32 y = 2;
inline void Point::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 Point::y() const {
  // @@protoc_insertion_point(field_get:iface.param.Point.y)
  return y_;
}
inline void Point::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:iface.param.Point.y)
}

// -------------------------------------------------------------------

// Region

// int32 x = 1;
inline void Region::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 Region::x() const {
  // @@protoc_insertion_point(field_get:iface.param.Region.x)
  return x_;
}
inline void Region::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:iface.param.Region.x)
}

// int32 y = 2;
inline void Region::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 Region::y() const {
  // @@protoc_insertion_point(field_get:iface.param.Region.y)
  return y_;
}
inline void Region::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:iface.param.Region.y)
}

// int32 width = 3;
inline void Region::clear_width() {
  width_ = 0;
}
inline ::google::protobuf::int32 Region::width() const {
  // @@protoc_insertion_point(field_get:iface.param.Region.width)
  return width_;
}
inline void Region::set_width(::google::protobuf::int32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:iface.param.Region.width)
}

// int32 height = 4;
inline void Region::clear_height() {
  height_ = 0;
}
inline ::google::protobuf::int32 Region::height() const {
  // @@protoc_insertion_point(field_get:iface.param.Region.height)
  return height_;
}
inline void Region::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:iface.param.Region.height)
}

// -------------------------------------------------------------------

// Landmark

// repeated .iface.param.Point pts = 1;
inline int Landmark::pts_size() const {
  return pts_.size();
}
inline void Landmark::clear_pts() {
  pts_.Clear();
}
inline const ::iface::param::Point& Landmark::pts(int index) const {
  // @@protoc_insertion_point(field_get:iface.param.Landmark.pts)
  return pts_.Get(index);
}
inline ::iface::param::Point* Landmark::mutable_pts(int index) {
  // @@protoc_insertion_point(field_mutable:iface.param.Landmark.pts)
  return pts_.Mutable(index);
}
inline ::iface::param::Point* Landmark::add_pts() {
  // @@protoc_insertion_point(field_add:iface.param.Landmark.pts)
  return pts_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::iface::param::Point >*
Landmark::mutable_pts() {
  // @@protoc_insertion_point(field_mutable_list:iface.param.Landmark.pts)
  return &pts_;
}
inline const ::google::protobuf::RepeatedPtrField< ::iface::param::Point >&
Landmark::pts() const {
  // @@protoc_insertion_point(field_list:iface.param.Landmark.pts)
  return pts_;
}

// -------------------------------------------------------------------

// FacialDetectResponse

// repeated .iface.param.Region regions = 1;
inline int FacialDetectResponse::regions_size() const {
  return regions_.size();
}
inline void FacialDetectResponse::clear_regions() {
  regions_.Clear();
}
inline const ::iface::param::Region& FacialDetectResponse::regions(int index) const {
  // @@protoc_insertion_point(field_get:iface.param.FacialDetectResponse.regions)
  return regions_.Get(index);
}
inline ::iface::param::Region* FacialDetectResponse::mutable_regions(int index) {
  // @@protoc_insertion_point(field_mutable:iface.param.FacialDetectResponse.regions)
  return regions_.Mutable(index);
}
inline ::iface::param::Region* FacialDetectResponse::add_regions() {
  // @@protoc_insertion_point(field_add:iface.param.FacialDetectResponse.regions)
  return regions_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::iface::param::Region >*
FacialDetectResponse::mutable_regions() {
  // @@protoc_insertion_point(field_mutable_list:iface.param.FacialDetectResponse.regions)
  return &regions_;
}
inline const ::google::protobuf::RepeatedPtrField< ::iface::param::Region >&
FacialDetectResponse::regions() const {
  // @@protoc_insertion_point(field_list:iface.param.FacialDetectResponse.regions)
  return regions_;
}

// repeated .iface.param.Landmark landmarks = 2;
inline int FacialDetectResponse::landmarks_size() const {
  return landmarks_.size();
}
inline void FacialDetectResponse::clear_landmarks() {
  landmarks_.Clear();
}
inline const ::iface::param::Landmark& FacialDetectResponse::landmarks(int index) const {
  // @@protoc_insertion_point(field_get:iface.param.FacialDetectResponse.landmarks)
  return landmarks_.Get(index);
}
inline ::iface::param::Landmark* FacialDetectResponse::mutable_landmarks(int index) {
  // @@protoc_insertion_point(field_mutable:iface.param.FacialDetectResponse.landmarks)
  return landmarks_.Mutable(index);
}
inline ::iface::param::Landmark* FacialDetectResponse::add_landmarks() {
  // @@protoc_insertion_point(field_add:iface.param.FacialDetectResponse.landmarks)
  return landmarks_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::iface::param::Landmark >*
FacialDetectResponse::mutable_landmarks() {
  // @@protoc_insertion_point(field_mutable_list:iface.param.FacialDetectResponse.landmarks)
  return &landmarks_;
}
inline const ::google::protobuf::RepeatedPtrField< ::iface::param::Landmark >&
FacialDetectResponse::landmarks() const {
  // @@protoc_insertion_point(field_list:iface.param.FacialDetectResponse.landmarks)
  return landmarks_;
}

// -------------------------------------------------------------------

// SimilarityParams

// string feat1 = 1;
inline void SimilarityParams::clear_feat1() {
  feat1_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SimilarityParams::feat1() const {
  // @@protoc_insertion_point(field_get:iface.param.SimilarityParams.feat1)
  return feat1_.GetNoArena();
}
inline void SimilarityParams::set_feat1(const ::std::string& value) {
  
  feat1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:iface.param.SimilarityParams.feat1)
}
#if LANG_CXX11
inline void SimilarityParams::set_feat1(::std::string&& value) {
  
  feat1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:iface.param.SimilarityParams.feat1)
}
#endif
inline void SimilarityParams::set_feat1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  feat1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:iface.param.SimilarityParams.feat1)
}
inline void SimilarityParams::set_feat1(const char* value, size_t size) {
  
  feat1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:iface.param.SimilarityParams.feat1)
}
inline ::std::string* SimilarityParams::mutable_feat1() {
  
  // @@protoc_insertion_point(field_mutable:iface.param.SimilarityParams.feat1)
  return feat1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SimilarityParams::release_feat1() {
  // @@protoc_insertion_point(field_release:iface.param.SimilarityParams.feat1)
  
  return feat1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SimilarityParams::set_allocated_feat1(::std::string* feat1) {
  if (feat1 != NULL) {
    
  } else {
    
  }
  feat1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feat1);
  // @@protoc_insertion_point(field_set_allocated:iface.param.SimilarityParams.feat1)
}

// string feat2 = 2;
inline void SimilarityParams::clear_feat2() {
  feat2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& SimilarityParams::feat2() const {
  // @@protoc_insertion_point(field_get:iface.param.SimilarityParams.feat2)
  return feat2_.GetNoArena();
}
inline void SimilarityParams::set_feat2(const ::std::string& value) {
  
  feat2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:iface.param.SimilarityParams.feat2)
}
#if LANG_CXX11
inline void SimilarityParams::set_feat2(::std::string&& value) {
  
  feat2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:iface.param.SimilarityParams.feat2)
}
#endif
inline void SimilarityParams::set_feat2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  feat2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:iface.param.SimilarityParams.feat2)
}
inline void SimilarityParams::set_feat2(const char* value, size_t size) {
  
  feat2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:iface.param.SimilarityParams.feat2)
}
inline ::std::string* SimilarityParams::mutable_feat2() {
  
  // @@protoc_insertion_point(field_mutable:iface.param.SimilarityParams.feat2)
  return feat2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SimilarityParams::release_feat2() {
  // @@protoc_insertion_point(field_release:iface.param.SimilarityParams.feat2)
  
  return feat2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SimilarityParams::set_allocated_feat2(::std::string* feat2) {
  if (feat2 != NULL) {
    
  } else {
    
  }
  feat2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), feat2);
  // @@protoc_insertion_point(field_set_allocated:iface.param.SimilarityParams.feat2)
}

// -------------------------------------------------------------------

// SimilarityResponse

// float score = 1;
inline void SimilarityResponse::clear_score() {
  score_ = 0;
}
inline float SimilarityResponse::score() const {
  // @@protoc_insertion_point(field_get:iface.param.SimilarityResponse.score)
  return score_;
}
inline void SimilarityResponse::set_score(float value) {
  
  score_ = value;
  // @@protoc_insertion_point(field_set:iface.param.SimilarityResponse.score)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace param
}  // namespace iface

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_param_2eproto__INCLUDED
