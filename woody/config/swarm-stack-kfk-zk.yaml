version: "3.4"

services:
  zk1:
    image: zookeeper:3.5
    hostname: zk1
    networks:
      - zk-net
    environment:
      TZ: Asia/Hong_Kong
    ports:
      - published: 2171
        target: 2181
        mode: host
      - published: 2878
        target: 2888
        mode: host
      - published: 3878
        target: 3888
        mode: host
    volumes:
      - zk-data:/data
      - zk-datalog:/datalog
      - zk-logs:/logs
    environment:
      ZOO_MY_ID: 1
      ZOO_SERVERS: server.1=0.0.0.0:2888:3888;2181 server.2=zk2:2888:3888 server.3=zk3:2888:3888
    deploy:
      placement:
        constraints: [node.labels.zknode == 1]
  zk2:
    image: zookeeper:3.5
    hostname: zk2
    networks:
      - zk-net
    environment:
      TZ: Asia/Hong_Kong
    ports:
      - published: 2171
        target: 2181
        mode: host
      - published: 2878
        target: 2888
        mode: host
      - published: 3878
        target: 3888
        mode: host
    volumes:
      - zk-data:/data
      - zk-datalog:/datalog
      - zk-logs:/logs
    environment:
      ZOO_MY_ID: 2
      ZOO_SERVERS: server.1=zk1:2888:3888 server.2=0.0.0.0:2888:3888;2181 server.3=zk3:2888:3888
    deploy:
      placement:
        constraints: [node.labels.zknode == 2]
  zk3:
    image: zookeeper:3.5
    hostname: zk3
    networks:
      - zk-net
    environment:
      TZ: Asia/Hong_Kong
    ports:
      - published: 2171
        target: 2181
        mode: host
      - published: 2878
        target: 2888
        mode: host
      - published: 3878
        target: 3888
        mode: host
    volumes:
      - zk-data:/data
      - zk-datalog:/datalog
      - zk-logs:/logs
    environment:
      ZOO_MY_ID: 3
      ZOO_SERVERS: server.1=zk1:2888:3888 server.2=zk2:2888:3888 server.3=0.0.0.0:2888:3888;2181
    deploy:
      placement:
        constraints: [node.labels.zknode == 3]
  k1:
    image: wurstmeister/kafka:2.12-2.1.0
    hostname: k1
    depends_on:
      - zk1
      - zk2
      - zk3
    networks:
      - zk-net
    volumes:
      - kfk-data:/kafka
    environment:
      TZ: Asia/Hong_Kong
    ports:
      - published: 17812
        target: 17812
        mode: host
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zk1:2181,zk2:2181,zk3:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_ADVERTISED_LISTENERS: INT://:17810,EXT://192.168.70.220:17812
      KAFKA_INTER_BROKER_LISTENER_NAME: INT
      KAFKA_BROKER_ID: 0
      KAFKA_CLEANUP_POLICY: compact
      KAFKA_LISTENERS: INT://:17810,EXT://:17812
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INT:PLAINTEXT,EXT:PLAINTEXT
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_PORT: 17810
    deploy:
      placement:
        constraints: [node.labels.kfknode == 1]
  k2:
    image: wurstmeister/kafka:2.12-2.1.0
    hostname: k2
    depends_on:
      - zk1
      - zk2
      - zk3
    networks:
      - zk-net
    volumes:
      - kfk-data:/kafka
    environment:
      TZ: Asia/Hong_Kong
    ports:
      - published: 17812
        target: 17812
        mode: host
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zk1:2181,zk2:2181,zk3:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_ADVERTISED_LISTENERS: INT://:17810,EXT://192.168.70.35:17812
      KAFKA_INTER_BROKER_LISTENER_NAME: INT
      KAFKA_BROKER_ID: 1
      KAFKA_CLEANUP_POLICY: compact
      KAFKA_LISTENERS: INT://:17810,EXT://:17812
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INT:PLAINTEXT,EXT:PLAINTEXT
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_PORT: 17810
    deploy:
      placement:
        constraints: [node.labels.kfknode == 2]
  k3:
    image: wurstmeister/kafka:2.12-2.1.0
    hostname: k3
    depends_on:
      - zk1
      - zk2
      - zk3
    networks:
      - zk-net
    volumes:
      - kfk-data:/kafka
    environment:
      TZ: Asia/Hong_Kong
    ports:
      - published: 17812
        target: 17812
        mode: host
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zk1:2181,zk2:2181,zk3:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
      KAFKA_ADVERTISED_LISTENERS: INT://:17810,EXT://192.168.70.94:17812
      KAFKA_INTER_BROKER_LISTENER_NAME: INT
      KAFKA_BROKER_ID: 3
      KAFKA_CLEANUP_POLICY: compact
      KAFKA_LISTENERS: INT://:17810,EXT://:17812
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,INT:PLAINTEXT,EXT:PLAINTEXT
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_PORT: 17810
    deploy:
      placement:
        constraints: [node.labels.kfknode == 3]
  spark1:
    image: zlynch/spark:2.4.0
    hostname: spark1
    networks:
      - zk-net
    ports:
      # web UI
      - published: 18880
        target: 8080
        mode: host
      - published: 18877
        target: 7077
        mode: host
    environment:
      TZ: Asia/Hong_Kong
      SPARK_NO_DAEMONIZE: 1
      SPARK_IDENT_STRING: '{{.Node.Hostname}}'
      #SPARK_DAEMON_JAVA_OPTS: '-Dspark.deploy.recoveryMode=ZOOKEEPER'
    command: /opt/spark/sbin/start-master.sh
    deploy:
      placement:
        constraints: [node.labels.sparknode == 1]
  spark1-worker:
    image: zlynch/spark:2.4.0
    hostname: '{{.Node.Hostname}}'
    networks:
      - zk-net
    ports:
      - published: 18881
        target: 8081
        mode: host
    environment:
      TZ: Asia/Hong_Kong
      SPARK_NO_DAEMONIZE: 1
      SPARK_IDENT_STRING: '{{.Node.Hostname}}'
    command: /opt/spark/sbin/start-slave.sh spark://spark1:7077
    deploy:
      placement:
        constraints: [node.hostname != core.master]
      replicas: 4

networks:
  zk-net:
    external:
      name: kfk_zk-net

volumes:
  kfk-data:
  zk-data:
  zk-datalog:
  zk-logs:
